# ===============================
# = DATA SOURCE
# ===============================
# Set here configurations for the database connection
spring.datasource.url=YOUR_DB_URL
spring.datasource.username=YOUR_DB_USERNAME
spring.datasource.password=YOUR_DB_PASSWORD
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration,org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration

# Logging level
logging.level.org.springframework.web=DEBUG
spring.jpa.properties.hibernate.format_sql=true

logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# Domain name
saversbasket-hostname-cookie=localhost


# ===============================
# = OAuth2 Settings
# ===============================

# GMail
spring.security.oauth2.client.registration.google.clientId=YOUR_GOOGLE_OAUTH_CLIENT_ID
spring.security.oauth2.client.registration.google.clientSecret=YOUR_GOOGLE_OAUTH_CLIENT_SECRET
spring.security.oauth2.client.registration.google.scope=email, profile

#Facebook
spring.security.oauth2.client.registration.facebook.clientId=YOUR_FACEBOOK_APP_CLIENT_ID
spring.security.oauth2.client.registration.facebook.clientSecret=YOUR_FACEBOOK_APP_SECRET_KEY
spring.security.oauth2.client.registration.facebook.scope=email, public_profile
# GitHub
spring.security.oauth2.client.registration.github.clientId=YOUR_GITHUB_APP_CLIENT_ID
spring.security.oauth2.client.registration.github.clientSecret=YOUR_GITHUB_APP_CLIENT_SECRET
spring.security.oauth2.client.registration.github.scope=user:email, read:user

# ===============================
# = Spring File Upload
# ===============================
## MULTIPART (MultipartProperties)

# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB

## File Storage Properties
# Please change this to the path where you want the uploaded files to be stored.
file.upload-dir=YOUR_SERVER_UPLOAD_FOLDER

# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=true

# Naming strategy
spring.jpa.hibernate.naming.physical-strategy=com.sb.web.dao.strategy.LowerTableStrategy
spring.main.allow-bean-definition-overriding=true

spring.thymeleaf.check-template-location=true
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=LEGACYHTML5
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.servlet.content-type=text/html
spring.thymeleaf.cache=false
 
#for Spring Boot 2.0

security.jwt.token.secret-key=YOUR_JWT_SECRET_KEY
security.jwt.token.expire-length=3600000
security.jwt.token.refresh-duration=2592000000

#Hikari config
spring.datasource.hikari.connectionTimeout=30000
spring.datasource.hikari.idleTimeout=600000
spring.datasource.hikari.maxLifetime=1800000
spring.datasource.hikari.maximumPoolSize=5

#clear cache
spring.cache.type=NONE

#Amazon S3 config 
amazonProperties.endpointUrl=YOUR_AWS_S3_URL
amazonProperties.accessKey=YOUR_AWS_S3_ACCESS_KEY
amazonProperties.secretKey=YOUR_AWS_S3_SECRET_KEY
amazonProperties.bucketName=YOUR_AWS_S3_BUCKET_NAME

# ===============================
# = Liquibase
# ===============================
# Enable liquibase to version database changes
spring.liquibase.enabled=false
spring.liquibase.change-log=classpath:db/changelog/liquibase-master-changeLog.xml
logging.level.liquibase=INFO

# un-comment for automatic tables creation
spring.jpa.properties.hibernate.hbm2ddl.auto=create
spring.jpa.hibernate.use-new-id-generator-mappings=false

# Gmail Properties
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=YOUR_GMAIL_ADDRESS
spring.mail.password=YOUR_GMAIL_PASSWORD
spring.mail.properties.mail.smtp.ssl.enable=true
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.socketFactory.port=465
spring.mail.properties.mail.smtp.socketFactory.class=javax.net.ssl.SSLSocketFactory
spring.mail.properties.mail.smtp.socketFactory.fallback=false

server.servlet.session.tracking-modes=cookie
server.port=8080

#DO NOT Force secured connection
server.useSecuredConnection=N

# active profile - uncomment when deploying to AWS
#spring.profiles.active=aws

# ticket raffle event
cron.shuffle.run.event=0 15 10 15 * ?

# disable whitelabel error page
server.error.whitelabel.enabled = false

# Api Key
api.http.auth-token-header-name=API-KEY
api.http.auth-token=YOUR_API_KEY_AUTH_TOKEN

#Disable Logging
#logging.level.org.springframework=OFF
#logging.level.root=OFF

# Expire session after 1 hour
# server.servlet.session.timeout=60m
